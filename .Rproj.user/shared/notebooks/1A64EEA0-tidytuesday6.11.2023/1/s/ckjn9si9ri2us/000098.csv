"0","#load usa map and save as sf object"
"0","usa = st_as_sf(maps::map(""state"", fill = TRUE, plot = FALSE))"
"0",""
"0","#mutate state column to all lowercase variables so join works"
"0","winning_party = winning_party |>"
"0","  mutate(state = tolower(state))"
"0",""
"0","#filter out alaska, hawaii, and dc; filter out `party = ""Other""`."
"0","winning_party = winning_party |>"
"0","  filter(state != ""alaska"", state != ""hawaii"", state != ""district of columbia"")"
"0",""
"0","#count winners by state, year, and party"
"0","winning_party_count = winning_party |>"
"0","  group_by(year, state, party) |>"
"0","  count()"
"0",""
"0","#mutate to show % of districts republcians won"
"0","winning_party_count = winning_party_count |>"
"0","  mutate(rep_districts = if_else(party == ""REPUBLICAN"", n, 0),"
"0","         dem_districts = if_else(party == ""DEMOCRAT"", n, 0),"
"0","         other_districts = if_else(party == ""OTHER"", n, 0)) |>"
"0","  ungroup()"
"0",""
"0","winning_party_count = winning_party_count |>"
"0","  select(-c(n, party)) |>"
"0","  group_by(year, state) |>"
"0","  summarise(across(c(rep_districts, dem_districts, other_districts), sum)) |>"
"0","  mutate(tot_districts = rep_districts + dem_districts,"
"0","         frac_rep = rep_districts/tot_districts)"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"0","  "
"0","#join geographical and winning_party_count data to make map"
"0","winning_party_geom = left_join("
"0","  winning_party_count,"
"0","  usa,"
"0","  by = c(""state"" = ""ID"")"
"0",")"
"0",""
"0","#make joined dataframe into an sf object"
"0","winning_party_geom = st_as_sf(winning_party_geom)"
